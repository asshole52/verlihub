#!@BASH_PATH@

# Include library
source $(dirname $0)/vh_lib

function _delete_config_var() #var
{
	if ! _mysql_query "DELETE FROM SetupList WHERE var='$1' and file='config'" ; then
		echo_s "-- Error deleting '$1' variable\n" $RED
	fi
}

function _delete_lang_var() #var
{
	if ! _mysql_query "DELETE FROM SetupList WHERE var='$1' and file!='config'" ; then
		echo_s "-- Error deleting '$1' variable\n" $RED
	fi
}


echo_s "-- Welcome to verliHub migration script to version 0.9.9a\n" $RED_BOLD
echo "-- In order to make migration you need to specify the verlihub config folder to get database information"

# Select path where to put verlihub config file
IS_CHOOSEN_FOLDER_OK=false
until $IS_CHOOSEN_FOLDER_OK;
do
	echo_s "\t[1] " $BOLD && echo "/etc/verlihub"
	echo_s "\t[2] " $BOLD && echo "$HOME.verlihub"
	echo_s "\t[3] " $BOLD && echo "$PREFIX/etc/verlihub"
	echo_s "\t[4] " $BOLD && echo "Other, choose path where put config file"

	CHOOSEN_FOLDER=$(ask "Select number")

	# Get selected folder
	case $CHOOSEN_FOLDER in
		"1") CHOOSEN_FOLDER="/etc/verlihub/";;
		"2") CHOOSEN_FOLDER="$HOME.verlihub/";;
		"3") CHOOSEN_FOLDER="$PREFIX/etc/verlihub/";;
		"4") CHOOSEN_FOLDER=$(ask "Type complete path");
	esac

	if set_path $CHOOSEN_FOLDER ; then
		IS_CHOOSEN_FOLDER_OK=true
	else
	echo -e "\nOk, let's try again"
	fi
done

echo "-- You verlihub config folder is '$CONFIG_DIR'"

if $(yes_or_no "Do you want to continue with migration?") ; then
	echo "-- Deleting ban message variables"
	BAN_MESSAGES=(ban_reason ban_remaining ban_expired ban_for ban_permanently ban_type ban_removed ban_by ban_types_nickip ban_types_ip ban_types_nick ban_types_iprange ban_types_host1 ban_types_host2 ban_types_host3 ban_types_share ban_types_email ban_types_prefix ban_types_rhost1)
	for VAR in ${BAN_MESSAGES[@]}; do
		_delete_lang_var $VAR
	done
	sleep 2

	echo "-- Deleting timeout message variables"
	TIMEOUT_MESSAGES=(timeout_key timeout_nick timeout_login timeout_myinfo timeout_flush timeout_setpass)
	for VAR in ${TIMEOUT_MESSAGES[@]}; do
		_delete_lang_var $VAR
	done
	sleep 2
	
	echo "-- Deleting tag_min_version and tag_max_version variables"
	CLIENTS=(plusplus dcgui odc dc dcpro strongdc idc zdc apexdc zion)
	for VAR in ${CLIENTS[@]}; do
		_delete_config_var "tag_min_version_$VAR"
		_delete_config_var "tag_max_version_$VAR"
	done
	sleep 2

	echo "-- Deleting other variables"
	OTHER_MESSAGES=(save_lang chat_msg_long chat_msg_lines pwd_cannot pwd_can pwd_min pwd_success pwd_set_error pwd_setup ip nick user host ip_range because op type not_in_userlist error success wrong_dc_tag tag_max_hubs tag_max_slots tag_min_slots tag_max_hs_ratio tag_min_limit tag_min_ls_ratio tag_no_sock msg_downgrade msg_upgrade msg_topic_set msg_topic_reset autoreg_nick_prefix autoreg_already_reg autoreg_success autoreg_error timeout_any operation_timeout msg_chat_onoff msg_change_pwd msg_banned msg_hub_full msg_nick_prefix msg_downgrade msg_upgrade msg_replace_ban login_share_min login_share_max autoreg_min_share search_share_min ctm_share_min)
	for VAR in ${OTHER_MESSAGES[@]}; do
		_delete_lang_var $VAR
	done
	sleep 2

	echo "-- Copying new help file for commands"
	if ! cp $DATADIR/config/help_* $CHOOSEN_FOLDER 	; then
		echo_s "-- Error copying help_* files from $DATADIR\n" $RED
	fi

	QUERY='TRUNCATE TABLE pi_plug';
	echo "-- Truncating pi_plug table; it will updated with verlihub"
	if ! _mysql_query "$QUERY" ; then
		echo_s "-- Error truncating 'pi_plugin' table; make it manually using '$QUERY'\n" $RED
	fi
	
	echo "-- Renaming variable 'lang_name' to 'locale' in dbconfig file"
	sed -i "s/lang_name/locale/g" "$CONFIG_DIR/dbconfig"  > /dev/null 2>&1

	echo "-- Done. Restart VerliHub now."
else
	echo "-- Skipped migration"
fi
exit 0;
