AC_INIT(acinclude.m4) 

datadir=$datadir/verlihub

VERSION="0.9.9a"
RELEASE=1
PACKAGE_NAME=verlihub

AC_SUBST(RELEASE)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE_NAME, $VERSION)

AC_MSG_RESULT([***
*** Checking compiler...
***
])   

AC_LANG_CPLUSPLUS
AC_PROG_CXX
AM_PROG_LIBTOOL
AC_ARG_ENABLE(profiling,[   --enable-profiling compiles the program to be tested for it's speed], [
			 CXXFLAGS="$CXXFLAGS -pg -g3 -O0 --no-inline"])


export PATH=".:$am_aux_dir:$PATH"
dnl Get the OS type
AC_CANONICAL_HOST
case $host in
 *-*-linux*)
   SYSTEM=LINUX
   AC_DEFINE(HAVE_LINUX, 1,  Linux environment)
   ;;
 *-*-cygwin*)
   SYSTEM=CYGWIN
   AC_DEFINE(HAVE_CYGWIN, 1,  Cygwin environment)
   ;;
 *-*-solaris*)
   SYSTEM=SOLARIS
   AC_DEFINE(HAVE_SOLARIS, 1,  Solaris environment)
   ;;
 *-*-freebsd*)
   SYSTEM=FREEBSD
   AC_DEFINE(HAVE_FREEBSD, 1,  Freebsd environment)
   ;;
 *-*-hp*)
   SYSTEM=HP
   AC_DEFINE(HAVE_HP, 1,  Hp environment)
   ;;
 *)
   SYSTEM=UNKNOWN
   ;;
esac
echo "Your OS is $host"

AC_MSG_RESULT([***
*** Checking 3rd party libraries (mysql, prec, geoip, zlib, etc.)...
***
])   

AC_MSG_CHECKING(for mysql-devel)
if noapos_mysql --cflags &> /dev/null; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no) 
	AC_MSG_ERROR(["Please install mysql-devel package"])
fi;

AC_MSG_CHECKING(for pcre-devel)
if noapos_pcre --cflags &> /dev/null ; then 
	AC_MSG_RESULT([yes])
else
 	AC_MSG_RESULT(no)
	AC_MSG_ERROR([[
	You need to install pcre devel package. Install it
	by using package manager tools provided by your
	distribution or download source code from:
	ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/
	]])
fi;

AC_PATH_LIB_LIBCONFIG
AC_MSG_CHECKING(for MySQL)
AC_PATH_LIB(mysql, , [],noapos_mysql, [], [
		    CXXFLAGS="$CXXFLAGS -I/usr/src/include/ $MYSQL_CFLAGS"
		    echo "adding $MYSQL_CFLAGS to CXXFLAGS"
		    echo "adding $MYSQL_LIBS to LDFLAGS"
		    ], [
		    echo "Please install mysql devel package"
		    exit -1
		    ])

AC_PATH_LIB_LIBCONFIG
AC_MSG_CHECKING(for pcre)
AC_PATH_LIB(pcre, [3.0.0 -nocheck], [], noapos_pcre, [], [
			CXXFLAGS="$CXXFLAGS $PCRE_CFLAGS"
			echo "adding $PCRE_CFLAGS to CXXFLAGS"
			echo "adding $PCRE_LIBS to LDFLAGS"
		    ], [
			echo "Install pcre devel"
			exit -1
		    ])

AC_PATH_LIB_LIBCONFIG
AC_MSG_CHECKING(for GeoIP)
AC_PATH_LIB(geoip, [0.0.0 -nocheck],[] , config_geoip ,[] , [
		    CXXFLAGS="$CXXFLAGS $GEOIP_CFLAGS"
		    echo "adding $GEOIP_CFLAGS to CXXFLAGS"
		    echo "adding $GEOIP_LIBS to LDFLAGS"
		    ], [
		      echo "Please download and install GeoIP package from:"
			   "http://www.maxmind.com/download/geoip/api/c/"
		      exit -1
			])

AC_CHECK_LIB([pcre],[pcre_get_stringnumber],[
	      AC_DEFINE([HAVE_PCRE_GET_STRINGNUMBER],[1],"you have function pcre_get_stringnumber in your pcre library" )
	      ])
AC_SEARCH_LIBS([crypt],[crypt, crypto])
AC_MSG_CHECKING(for libcrypt)
AC_CHECK_LIB([crypt], [crypt],[AC_SUBST(CRYPT_LIBS,"-lcrypt")])
AC_CHECK_LIB([crypto], [crypt],[AC_SUBST(CRYPT_LIBS,"-lcrypto")])
AC_CHECK_LIB([crypt], [crypt])
AC_CHECK_LIB([crypto], [crypt])
AC_MSG_CHECKING(for ZLib library)
#AC_CHECK_LIB([z], [z],[AC_SUBST(ZLIB_LIBS,"-lzlib")], AC_ERROR("Please install zlib library"))
AC_MSG_CHECKING(for SSL library)
AC_CHECK_LIB([ssl], [MD5])
AC_CHECK_LIB([dl], [dlopen],[AC_SUBST(DLOPEN_LIBS,"-ldl")
	      echo "dlopen is in libdl"],
	      [echo "dlopen is not defined in ldl"])
AC_CHECK_LIB([c], [dlopen],[AC_SUBST(DLOPEN_LIBS,"-lc")
	      echo "dlopen is in libc"
	      ],[echo "dlopen is not defined in libc"])
AC_CHECK_LIB([GeoIP], GeoIP_new)

ACX_PTHREAD([echo "PTHREAD_LIBS=$PTHREAD_LIBS PTHREAD_CFLAGS=$PTHREAD_CFLAGS"],[echo "Sorry, cannot currently work without pthreads"; exit 1;]) 

AC_MSG_RESULT([***
*** Checking header files...
***
]) 
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([arpa/inet.h fcntl.h netdb.h netinet/in.h stdlib.h string.h sys/socket.h sys/time.h unistd.h ostream string errno.h sys/poll.h openssl/md5.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME

# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_CHECK_FUNCS([gethostbyaddr gettimeofday inet_ntoa memchr memset select socket strerror])

AC_TRY_COMPILE([
		#include <string>
		],[
		   std::string str("testcompare");
		   if( 0==str.compare(0,4,std::string("test"))) return 0;
		   else return 1; ]
		,ac_cxx_have_old_str_string=no,ac_cxx_have_old_str_string=yes)
if test "$ac_cxx_have_old_str_string" = yes; then
	AC_DEFINE(OLD_STD_STRING,,[define if the std::sting::compare with two integers and one string are string first])
fi

#AM_GNU_GETTEXT_VERSION([0.16])
#AM_GNU_GETTEXT([external])

AM_MAINTAINER_MODE

#
# make difference between normal linking and debug linking
#
AC_ARG_ENABLE(debug, [  --enable-debug    Turn on debugging],
     [case "${enableval}" in
        yes) debug=true ;;
         no) debug=false ;;
          *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
     esac],[debug=false])
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)

echo "checking for bash"
BASH_PATH=`which bash` || BASH_PATH=`whereis -b bash|cut -f2 -d\ `
AC_SUBST(BASH_PATH)

VERLIHUB_LIBS="$PCRE_LIBS $MYSQL_LIBS $DLOPEN_LIBS $CRYPT_LIBS $GEOIP_LIBS $PTHREAD_LIBS $PTHREAD_CFLAGS $ZLIB_LIBS"
AC_SUBST(VERLIHUB_LIBS)

AC_SUBST(SUB_PLUGINS)

AC_CONFIG_FILES([Makefile
		 src/Makefile
		 scripts/Makefile
		 share/Makefile
		 plugins/Makefile
		 plugins/plugman/Makefile
		 verlihub.spec
		 verlihub_config
		 scripts/vh_restart
		 scripts/vh_runhub
		 scripts/vh_getcfg
		 scripts/vh_getdb
		 scripts/vh_trigger
		 scripts/vh_regnick
		 scripts/vh_install
		  scripts/vh_install_cli
		  scripts/vh_install_gui
		 scripts/vh_setup
		 share/sql/default_pi_plug.sql
		 ])

AC_OUTPUT()

echo
echo "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
echo "Configure has completed successfully. Now you must run make."
echo "If make fails with errors, please consult the forums and see"
echo "if anyone else has had the same issue. The forums are located"
echo "here http://forums.verlihub-project.org"
echo "Extensive documentation is also available at the project website"
echo "which can be found here http://www.verlihub-project.org"
echo "Please feel free to join and register at the Verlihub suport"
echo "hub located here dchub://hub.verlihub-project.org:7777"
echo "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-"
